{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IT\\\\Documents\\\\Devs\\\\2021\\\\React\\\\foodApp\\\\src\\\\components\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './Cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartItems = {\n  items: [],\n  totalAmount: 0\n};\n\nconst itemsCartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updateTotalAmount = state.totalAmount + action.item.amount * action.item.price;\n    const existeCartitemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existeCartItem = state.items[existeCartitemIndex];\n    const updateItems = state.items.concat(action.item);\n    return {\n      items: updateItems,\n      totalAmount: updateTotalAmount\n    };\n  }\n\n  return defaultCartItems;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartItemsState, dispatchItemsCart] = useReducer(itemsCartReducer, defaultCartItems);\n\n  const addItemCartHandler = item => {\n    dispatchItemsCart({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemCartHandler = id => {\n    dispatchItemsCart({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartItemsState.items,\n    totalAmount: cartItemsState.totalAmount,\n    addItem: addItemCartHandler,\n    revomeItem: removeItemCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"FYDRO2nLMM2qxNaMOqBdzQLQUrc=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/IT/Documents/Devs/2021/React/foodApp/src/components/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartItems","items","totalAmount","itemsCartReducer","state","action","type","updateTotalAmount","item","amount","price","existeCartitemIndex","findIndex","id","existeCartItem","updateItems","concat","CartProvider","props","cartItemsState","dispatchItemsCart","addItemCartHandler","removeItemCartHandler","cartContext","addItem","revomeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AACA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAIA,MAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1C,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,iBAAiB,GACrBH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,MAAZ,GAAqBJ,MAAM,CAACG,IAAP,CAAYE,KADvD;AAEA,UAAMC,mBAAmB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAC1BJ,IAAI,IAAIA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EADN,CAA5B;AAGA,UAAMC,cAAc,GAAGV,KAAK,CAACH,KAAN,CAAYU,mBAAZ,CAAvB;AACA,UAAMI,WAAW,GAAGX,KAAK,CAACH,KAAN,CAAYe,MAAZ,CAAmBX,MAAM,CAACG,IAA1B,CAApB;AACA,WAAO;AAAEP,MAAAA,KAAK,EAAEc,WAAT;AAAsBb,MAAAA,WAAW,EAAEK;AAAnC,KAAP;AACD;;AACD,SAAOP,gBAAP;AACD,CAZD;;AAaA,MAAMiB,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC5B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCtB,UAAU,CACpDK,gBADoD,EAEpDH,gBAFoD,CAAtD;;AAIA,QAAMqB,kBAAkB,GAAGb,IAAI,IAAI;AACjCY,IAAAA,iBAAiB,CAAC;AAAEd,MAAAA,IAAI,EAAE,KAAR;AAAeE,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAjB;AACD,GAFD;;AAGA,QAAMc,qBAAqB,GAAGT,EAAE,IAAI;AAClCO,IAAAA,iBAAiB,CAAC;AAAEd,MAAAA,IAAI,EAAE,QAAR;AAAkBO,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAjB;AACD,GAFD;;AAGA,QAAMU,WAAW,GAAG;AAClBtB,IAAAA,KAAK,EAAEkB,cAAc,CAAClB,KADJ;AAElBC,IAAAA,WAAW,EAAEiB,cAAc,CAACjB,WAFV;AAGlBsB,IAAAA,OAAO,EAAEH,kBAHS;AAIlBI,IAAAA,UAAU,EAAEH;AAJM,GAApB;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACGL,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAtBD;;GAAMT,Y;;KAAAA,Y;AAuBN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport CartContext from './Cart-context';\r\nconst defaultCartItems = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\nconst itemsCartReducer = (state, action) => {\r\n  if (action.type === 'ADD') {\r\n    const updateTotalAmount =\r\n      state.totalAmount + action.item.amount * action.item.price;\r\n    const existeCartitemIndex = state.items.findIndex(\r\n      item => item.id === action.item.id\r\n    );\r\n    const existeCartItem = state.items[existeCartitemIndex]\r\n    const updateItems = state.items.concat(action.item);\r\n    return { items: updateItems, totalAmount: updateTotalAmount };\r\n  }\r\n  return defaultCartItems;\r\n};\r\nconst CartProvider = props => {\r\n  const [cartItemsState, dispatchItemsCart] = useReducer(\r\n    itemsCartReducer,\r\n    defaultCartItems\r\n  );\r\n  const addItemCartHandler = item => {\r\n    dispatchItemsCart({ type: 'ADD', item: item });\r\n  };\r\n  const removeItemCartHandler = id => {\r\n    dispatchItemsCart({ type: 'REMOVE', id: id });\r\n  };\r\n  const cartContext = {\r\n    items: cartItemsState.items,\r\n    totalAmount: cartItemsState.totalAmount,\r\n    addItem: addItemCartHandler,\r\n    revomeItem: removeItemCartHandler,\r\n  };\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}